from itertools import combinations

Kevin = {"Halsey", "Taylor Swift", "Mitski", "Joji", "Shawn Mendes", "Sabrina Carpenter", "Nicky Minaj", "Conan Gray", "One Direction", "Justin Bieber"}

Stuart = {"Kendrick Lamar", "Steve Lacy", "Tyler the Creator", "Joji", "ThewWeeknd", "Coldplay", "Kanye West", "Travis Scott", "Frank Ocean", "Brent Faiyaz"}

Bob = {"Conan Gray", "Joji", "Dove Cameron", "Mitski", "Arctic Monkeys", "Steve Lacy", "Kendrick Lamar", "Isabel LaRosa", "Shawn Mendes", "Coldplay"}

Edith = {"Metallica", "Billie Eilish", "TheWeeknd", "Mitski", "NF", "Conan Gray", "Kendrick Lamar", "Nicky Minaj", "Kanye West", "Coldplay"}

DJs = {'Kevin': Kevin,'Stuart': Stuart,'Bob': Bob, 'Edith': Edith,}

def overlap(set1, set2):
    artists = set1.intersection(set2)
    overlap1 = len(artists) / len(set1) * 100
    overlap2 = len(artists) / len(set2) * 100
    return overlap1, overlap2

def pairs(DJs):
    pairs = []
    for (DJ1, A1), (DJ2, A2) in combinations(DJs.items(), 2):
        overlap1, overlap2 = overlap(A1, A2)
        if overlap1 >= 30 and overlap2 >= 30:
            overall_overlap = (overlap1 + overlap2) / 2
            pairs.append(((DJ1, DJ2), overall_overlap))
    pairs.sort(key=lambda x: x[1], reverse=True)
    return pairs

dj_pairs = pairs(DJs)
for pair, overlap in dj_pairs:
    print(f"{pair}, overlap: {overlap}%")